[{"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Sidebar.js":"3","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading.js":"4","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Projects.js":"5","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\loginForm.js":"6","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Home.js":"7","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SignUp.js":"8","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Explore.js":"9","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Notifs.js":"10","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Settings.js":"11","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TasksData.js":"12","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectForm.js":"13","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ClientDisplaySelection.js":"14","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\IdDisplaySelection.js":"15","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SideBarData.js":"16","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectDisplaySelection.js":"17","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskDisplaySelection.js":"18","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskList.js":"19","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectsList.js":"20","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\UserDisplaySelection.js":"21","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\GrosTaskList.js":"22","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Project.js":"23","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading2.js":"24","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskForm.js":"25","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\CR.js":"26","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\CrCard.js":"27"},{"size":255,"mtime":1613057531202,"results":"28","hashOfConfig":"29"},{"size":7754,"mtime":1614895095620,"results":"30","hashOfConfig":"29"},{"size":1969,"mtime":1613057429041,"results":"31","hashOfConfig":"29"},{"size":637,"mtime":1613596919853,"results":"32","hashOfConfig":"29"},{"size":2326,"mtime":1614156323332,"results":"33","hashOfConfig":"29"},{"size":2422,"mtime":1614156323331,"results":"34","hashOfConfig":"29"},{"size":1133,"mtime":1614864355267,"results":"35","hashOfConfig":"29"},{"size":4193,"mtime":1613131945176,"results":"36","hashOfConfig":"29"},{"size":5318,"mtime":1614896695946,"results":"37","hashOfConfig":"29"},{"size":1567,"mtime":1613596919863,"results":"38","hashOfConfig":"29"},{"size":107,"mtime":1613057429097,"results":"39","hashOfConfig":"29"},{"size":340,"mtime":1613057429064,"results":"40","hashOfConfig":"29"},{"size":6636,"mtime":1614768614539,"results":"41","hashOfConfig":"29"},{"size":4494,"mtime":1614893770001,"results":"42","hashOfConfig":"29"},{"size":2235,"mtime":1614800427189,"results":"43","hashOfConfig":"29"},{"size":915,"mtime":1614864355192,"results":"44","hashOfConfig":"29"},{"size":5191,"mtime":1614895904021,"results":"45","hashOfConfig":"29"},{"size":6283,"mtime":1614893614319,"results":"46","hashOfConfig":"29"},{"size":9379,"mtime":1614864355198,"results":"47","hashOfConfig":"29"},{"size":2971,"mtime":1614864355074,"results":"48","hashOfConfig":"29"},{"size":5992,"mtime":1614893683636,"results":"49","hashOfConfig":"29"},{"size":10040,"mtime":1614768614531,"results":"50","hashOfConfig":"29"},{"size":11215,"mtime":1614864355070,"results":"51","hashOfConfig":"29"},{"size":472,"mtime":1613998275297,"results":"52","hashOfConfig":"29"},{"size":10307,"mtime":1614864355195,"results":"53","hashOfConfig":"29"},{"size":539,"mtime":1614887352655,"results":"54","hashOfConfig":"29"},{"size":1294,"mtime":1614887352654,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"44v74n",{"filePath":"59","messages":"60","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\index.js",[],["120","121"],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\App.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Projects from \"./pages/Projects\";\r\nimport Explore from \"./pages/Explore\";\r\nimport Notifs from \"./pages/Notifs\";\r\nimport Settings from \"./pages/Settings\";\r\nimport { td } from \"./components/TasksData\";\r\nimport loading from \"./components/Loading\";\r\nimport CR from \"./pages/CR\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport ProjectForm from \"./components/ProjectForm\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Checkbox,\r\n  TextField,\r\n  FormControlLabel,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const HomeLoading = loading(Home);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    userData: null,\r\n    notifsData: null,\r\n    projectsData: null,\r\n    tasksData: null,\r\n    islogged: false,\r\n    email: \"\",\r\n    mdp: \"\",\r\n  });\r\n\r\n  const handleMailChange = (e) => {\r\n    setAppState({ mdp: appState.mdp, email: e.target.value });\r\n    console.log(appState.email);\r\n  };\r\n  const handleMDPChange = (e) => {\r\n    setAppState({ mdp: e.target.value, email: appState.email });\r\n    console.log(appState.mdp);\r\n  };\r\n\r\n  const login = () => {\r\n    console.log(\"logged\");\r\n    setAppState({ loading: true });\r\n    const apiUrl = \"http://localhost:3001/login\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const user = { email: appState.email, mdp: appState.mdp };\r\n    var raw = JSON.stringify(user);\r\n    console.log(user);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          console.log(\"bonnerep\");\r\n          setAppState({\r\n            loading: false,\r\n            userData: data.dataUtilisateur,\r\n            notifsData: data.dataNotifications,\r\n            projectsData: data.dataProjects,\r\n            tasksData: data.dataTaches,\r\n            isLoading: true,\r\n            islogged: true,\r\n          });\r\n        } else {\r\n          window.alert(\"Mauvais identifiants\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  const enterHandle = useCallback(\r\n    (event) => {\r\n      if (event.key === \"Enter\" && !appState.islogged) {\r\n        login();\r\n      }\r\n    },\r\n    [login]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", enterHandle, false);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", enterHandle, false);\r\n    };\r\n  }, [enterHandle]);\r\n  /* useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = \"http://localhost:3001/login\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify(user);\r\n\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setAppState({\r\n          loading: false,\r\n          userData: data.dataUtilisateur,\r\n          notifsData: data.dataNotifications,\r\n          projectsData: data.dataProjects,\r\n          tasksData: data.dataTaches,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }, [setAppState]); */\r\n  // if (!appState.islogged) {\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //       <main className=\"App\">\r\n  //         <Container component=\"main\" maxWidth=\"xs\">\r\n  //           <CssBaseline />\r\n  //           <div className={classes.paper}>\r\n  //             <Typography component=\"h1\" variant=\"h5\">\r\n  //               Sign in\r\n  //             </Typography>\r\n  //             <form className={classes.form} noValidate>\r\n  //               <TextField\r\n  //                 variant=\"outlined\"\r\n  //                 margin=\"normal\"\r\n  //                 required\r\n  //                 fullWidth\r\n  //                 id=\"email\"\r\n  //                 label=\"Email Address\"\r\n  //                 name=\"email\"\r\n  //                 autoComplete=\"email\"\r\n  //                 autoFocus\r\n  //                 onChange={handleMailChange}\r\n  //               />\r\n  //               <TextField\r\n  //                 variant=\"outlined\"\r\n  //                 margin=\"normal\"\r\n  //                 required\r\n  //                 fullWidth\r\n  //                 name=\"password\"\r\n  //                 label=\"Password\"\r\n  //                 type=\"password\"\r\n  //                 id=\"password\"\r\n  //                 autoComplete=\"current-password\"\r\n  //                 onChange={handleMDPChange}\r\n  //               />\r\n  //               <FormControlLabel\r\n  //                 control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n  //                 label=\"Remember me\"\r\n  //               />\r\n  //               <Button\r\n  //                 fullWidth\r\n  //                 variant=\"contained\"\r\n  //                 color=\"primary\"\r\n  //                 onClick={() => {\r\n  //                   login();\r\n  //                 }}\r\n  //               >\r\n  //                 Sign In\r\n  //               </Button>\r\n  //             </form>\r\n  //           </div>\r\n  //           <Box mt={8}>\r\n  //             <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n  //               {\"Copyright © \"}\r\n  //               <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n  //                 Project Manager\r\n  //               </Link>{\" \"}\r\n  //               {new Date().getFullYear()}\r\n  //               {\".\"}\r\n  //             </Typography>\r\n  //           </Box>\r\n  //         </Container>\r\n  //       </main>\r\n  //     </React.Fragment>\r\n  //   );\r\n  // } else {\r\n  return (\r\n    <React.Fragment>\r\n      <main className=\"App\">\r\n        <Router>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={() => (\r\n                <HomeLoading\r\n                  isLoading={appState.loading}\r\n                  Userdata={appState.userData}\r\n                  tasks={appState.tasksData}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/projects\"\r\n              render={() => (\r\n                <Projects\r\n                  Userdata={appState.userData}\r\n                  projects={appState.projectsData}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/notifications\"\r\n              render={() => <Notifs notifs={appState.notifsData} />}\r\n            />\r\n            <Route path=\"/explore\" component={Explore} />\r\n            <Route path=\"/settings\" component={ProjectForm} />\r\n            <Route path=\"/cr\" render={() => <CR user={appState.userData} />} />\r\n          </Switch>\r\n        </Router>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n// }\r\n\r\nexport default App;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Sidebar.js",["140"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport * as FAIcons from \"react-icons/fa\";\r\nimport * as AIIcons from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SideBarData } from \"./SideBarData\";\r\nimport \"./Sidebar.css\";\r\nimport { IconContext } from \"react-icons\";\r\nfunction Sidebar() {\r\n  const [sideBar, setSideBar] = useState(false);\r\n  const showSideBar = () => setSideBar(!sideBar);\r\n  const escFunction = useCallback(\r\n    (event) => {\r\n      if ((event.key === \"Escape\" || event.type === \"click\") && sideBar) {\r\n        showSideBar();\r\n      }\r\n    },\r\n    [showSideBar]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n    document.addEventListener(\"click\", escFunction, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", escFunction, false);\r\n      document.removeEventListener(\"click\", escFunction, false);\r\n    };\r\n  }, [escFunction]);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#5060b8\" }}>\r\n        <div className=\"navbar\">\r\n          <Link to=\"#\" className=\"menu-bars\">\r\n            <FAIcons.FaBars onClick={showSideBar} />\r\n          </Link>\r\n        </div>\r\n        <nav className={sideBar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\" onClick={showSideBar}>\r\n            <li className=\"navbar-toggle\">\r\n              <Link to=\"#\" className=\"menu-bars\">\r\n                <AIIcons.AiOutlineClose />\r\n              </Link>\r\n            </li>\r\n            {SideBarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link to={item.path}>\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Projects.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\loginForm.js",["141"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Checkbox,\r\n  TextField,\r\n  FormControlLabel,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\n//import {LockOutlinedIcon} from '@material-ui/icons/LockOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n          {\"Copyright © \"}\r\n          <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n            Project Manager\r\n          </Link>{\" \"}\r\n          {new Date().getFullYear()}\r\n          {\".\"}\r\n        </Typography>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Explore.js",["142","143","144"],"import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ClientDisplaySelection from \"./../components/ClientDisplaySelection\";\r\nimport ProjectDisplaySelection from \"../components/ProjectDisplaySelection\";\r\nimport UserDisplaySelection from \"../components/UserDisplaySelection\";\r\nimport IdDisplaySelection from \"./../components/IdDisplaySelection\";\r\nimport TaskDisplaySelection from \"./../components/TaskDisplaySelection\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\n\r\nconst useStyles = makeStyles({\r\n  dropDown: {\r\n    margin: \"2rem auto\",\r\n    width: \"90%\",\r\n    // marginLeft: auto,\r\n    // marginRight: auto\r\n  },\r\n  test: {\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  flagContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nfunction Explore() {\r\n  const classes = useStyles();\r\n\r\n  const [searchMode, setSearchMode] = useState(\"Projets\");\r\n  const handleChange = (e) => {\r\n    setSearchMode(e.target.value);\r\n  };\r\n  if (searchMode === \"Clients\") {\r\n    return (\r\n      <>\r\n        <div className={classes.dropDown}>\r\n          <Form.Group\r\n            className={classes.test}\r\n            controlId=\"exampleForm.ControlSelect1\"\r\n          >\r\n            <Form.Control as=\"select\" onChange={handleChange}>\r\n              <option>Projets</option>\r\n              <option>Tâches</option>\r\n              <option>Utilisateurs</option>\r\n              <option selected={true}>Clients</option>\r\n              <option>Tout par ID</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n\r\n        <ClientDisplaySelection />\r\n      </>\r\n    );\r\n  }\r\n  if (searchMode === \"Projets\") {\r\n    return (\r\n      <>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.flagContainer}>\r\n              <LensIcon color=\"primary\" />\r\n              <span>projet terminé </span>\r\n            </div>\r\n            <div className={classes.flagContainer}>\r\n              <LensIcon color=\"secondary\" />\r\n              <span>projet en cours </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <div className={classes.dropDown}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Control as=\"select\" onChange={handleChange}>\r\n              <option selected={true}>Projets</option>\r\n              <option>Tâches</option>\r\n              <option>Utilisateurs</option>\r\n              <option>Clients</option>\r\n              <option>Tout par ID</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n        <ProjectDisplaySelection />\r\n      </>\r\n    );\r\n  }\r\n  if (searchMode === \"Tâches\") {\r\n    return (\r\n      <>\r\n        <div className={classes.dropDown}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Control as=\"select\" onChange={handleChange}>\r\n              <option>Projets</option>\r\n              <option selected={true}>Tâches</option>\r\n              <option>Utilisateurs</option>\r\n              <option>Clients</option>\r\n              <option>Tout par ID</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n        <TaskDisplaySelection />\r\n      </>\r\n    );\r\n  }\r\n  if (searchMode === \"Utilisateurs\") {\r\n    return (\r\n      <>\r\n        <div className={classes.dropDown}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Control as=\"select\" onChange={handleChange}>\r\n              <option>Projets</option>\r\n              <option>Tâches</option>\r\n              <option selected={true}>Utilisateurs</option>\r\n              <option>Clients</option>\r\n              <option>Tout par ID</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n        <UserDisplaySelection />\r\n      </>\r\n    );\r\n  }\r\n  if (searchMode === \"Tout par ID\") {\r\n    return (\r\n      <>\r\n        <div className={classes.dropDown}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Control as=\"select\" onChange={handleChange}>\r\n              <option>Projets</option>\r\n              <option>Tâches</option>\r\n              <option>Utilisateurs</option>\r\n              <option>Clients</option>\r\n              <option selected={true}>Tout par ID</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n        <IdDisplaySelection />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n      <Form.Control as=\"select\" onChange={handleChange}>\r\n        <option>Projets</option>\r\n        <option>Tâches</option>\r\n        <option>Utilisateurs</option>\r\n        <option>Clients</option>\r\n        <option>Tout par ID</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Notifs.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Settings.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TasksData.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectForm.js",["145"],"import { React, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst getNow = () => {\r\n  const now = new Date();\r\n  console.log(now.toLocaleDateString());\r\n  return now.toLocaleDateString();\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      //margin: \"2rem auto\",\r\n      margin: \"0.5rem auto\",\r\n      width: \"75%\",\r\n    },\r\n  },\r\n  description: {\r\n    width: \"50%\",\r\n  },\r\n  groupedFields: {\r\n    justifyContent: \"space-around\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst ProjectForm = () => {\r\n  const [state, setstate] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    responsable: \"\",\r\n    client: \"\",\r\n    dateDebutInit: \"\",\r\n    dateFinInit: \"\",\r\n    now: new Date(),\r\n  });\r\n  const handleEndChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: e.target.value,\r\n    });\r\n  };\r\n  const handleBeginChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: e.target.value,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleClientChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: e.target.value,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleRespChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: e.target.value,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleDescChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: e.target.value,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleTittleChange = (e) => {\r\n    setstate({\r\n      titre: e.target.value,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <h1>Créer un projet</h1>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"titre\"\r\n            label=\"Titre\"\r\n            name=\"titre\"\r\n            autoComplete=\"titre\"\r\n            autoFocus\r\n            InputLabelProps={{\r\n              style: { color: \"#060b26\" },\r\n            }}\r\n            onChange={handleTittleChange}\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Description\"\r\n            required\r\n            autoFocus\r\n            multiline\r\n            rows={3}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              style: { color: \"#060b26\" },\r\n            }}\r\n            onChange={handleDescChange}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            //margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"resp\"\r\n            label=\"Responsable\"\r\n            name=\"resp\"\r\n            autoComplete=\"collaborateurs\"\r\n            autoFocus\r\n            InputLabelProps={{\r\n              style: { color: \"#060b26\" },\r\n            }}\r\n            onChange={handleRespChange}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            //margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"client\"\r\n            label=\"Client\"\r\n            name=\"client\"\r\n            autoComplete=\"client\"\r\n            autoFocus\r\n            InputLabelProps={{\r\n              style: { color: \"#060b26\" },\r\n            }}\r\n            onChange={handleClientChange}\r\n          />\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            //margin=\"normal\"\r\n            required\r\n            id=\"date\"\r\n            label=\"Date de début\"\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n              style: { color: \"#060b26\" },\r\n            }}\r\n            onChange={handleBeginChange}\r\n          />\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            //margin=\"normal\"\r\n            required\r\n            id=\"date\"\r\n            label=\"Date de fin\"\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n              style: { color: \"#060b26\" },\r\n            }}\r\n            onChange={handleEndChange}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => {\r\n              const apiUrl = \"http://localhost:3001/Ajout/Projet\";\r\n              var myHeaders = new Headers();\r\n              myHeaders.append(\"Content-Type\", \"application/json\");\r\n              const req = state;\r\n              var raw = JSON.stringify(req);\r\n              var reqOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n              };\r\n              fetch(apiUrl, reqOptions)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                  console.log(data);\r\n                  if (data.success) {\r\n                    history.goBack();\r\n                  } else {\r\n                    alert(data.erreur);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            Créer\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ClientDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\IdDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SideBarData.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskDisplaySelection.js",["146","147"],"import { React, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  groupedFields: {\r\n    justifyContent: \"space-around\",\r\n    display: \"flex\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  searchField: {},\r\n  root: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n  },\r\n});\r\n//Responsable et client\r\n\r\nconst TaskDisplaySelection = (props) => {\r\n  const [state, setState] = useState({\r\n    id: \"\",\r\n    titre: \"\",\r\n    responsable: \"\",\r\n    collaborateur: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  const handleChangeId = (event) => {\r\n    setState({ id: event.target.value });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Projet\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const req = { id: event.target.value };\r\n    var raw = JSON.stringify(req);\r\n    console.log(req);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n    setState({ loading: true });\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.error(res);\r\n        if (res.length > 0) {\r\n          setState({ projects: res, loading: false });\r\n        }\r\n      });\r\n  };\r\n  const handleChangeTitle = (event) => {\r\n    setState({ titre: event.target.value });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Projet\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const req = { titre: event.target.value };\r\n    var raw = JSON.stringify(req);\r\n    console.log(req);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n    setState({ loading: true });\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.error(res);\r\n        if (res.length > 0) {\r\n          setState({ projects: res, loading: false });\r\n        }\r\n      });\r\n  };\r\n  const handleChangeDate = (event) => {\r\n    setState({ date: event.target.value });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Projet\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const req = { date: event.target.value };\r\n    var raw = JSON.stringify(req);\r\n    console.log(req);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n    setState({ loading: true });\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.error(res);\r\n        if (res.length > 0) {\r\n          setState({ projects: res, loading: false });\r\n        }\r\n      });\r\n  };\r\n  const handleChangeResponsable = (event) => {\r\n    setState({ responsable: event.target.value });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Tache\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const req = { responsable: event.target.value };\r\n    var raw = JSON.stringify(req);\r\n    console.log(req);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n    setState({ loading: true });\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.error(res);\r\n        if (res.length > 0) {\r\n          setState({ tasks: res, loading: false });\r\n        }\r\n      });\r\n  };\r\n  const handleChangeCollab = (event) => {\r\n    setState({ collaborateur: event.target.value });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Tache\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const req = { collaborateur: event.target.value };\r\n    var raw = JSON.stringify(req);\r\n    console.log(req);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n    setState({ loading: true });\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.error(res);\r\n        if (res.length > 0) {\r\n          setState({ tasks: res, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.groupedFields}>\r\n        <div className={classes.searchField}>\r\n          <input\r\n            type=\"search\"\r\n            id=\"form1\"\r\n            className=\"form-control\"\r\n            placeholder=\"Id\"\r\n            aria-label=\"Search\"\r\n            value={state.id}\r\n            onChange={handleChangeId}\r\n          />\r\n        </div>\r\n        <div className={classes.searchField}>\r\n          <input\r\n            type=\"search\"\r\n            id=\"form1\"\r\n            className=\"form-control\"\r\n            placeholder=\"titre\"\r\n            aria-label=\"Search\"\r\n            value={state.titre}\r\n            onChange={handleChangeTitle}\r\n          />\r\n        </div>\r\n        <div className={classes.searchField}>\r\n          <input\r\n            type=\"search\"\r\n            id=\"form1\"\r\n            className=\"form-control\"\r\n            placeholder=\"date\"\r\n            aria-label=\"Search\"\r\n            onChange={handleChangeDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Titre</th>\r\n            <th>Date</th>\r\n            <th>Responsable</th>\r\n            <th>Client</th>\r\n            <th>Etat</th>\r\n          </tr>\r\n        </thead>\r\n        {/* {!state.loading ? (\r\n            <tbody>\r\n              {state.projects.map((project) => (\r\n                <tr key={project._id}>\r\n                  <td>{project._id}</td>\r\n  \r\n                  <td>{project.titre}</td>\r\n                  <td>\r\n                    {project.dateDebutEffect} -- {project.dateFinEffect}\r\n                  </td>\r\n                  <td>{project.responsable}</td>\r\n                  <td>{project.client}</td>\r\n                  <td>E</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          ) : null} */}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDisplaySelection;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskList.js",["148","149","150"],"import { React, useState } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport GrosTaskList from \"./GrosTaskList\";\r\nimport Button from \"react-bootstrap/Button\";\r\nfunction TaskList(props) {\r\n  console.log(\"tasks\", props);\r\n  const [state, setstate] = useState({ diving: true });\r\n  const [listetaches, setListeTache] = useState([]);\r\n  const addToStart = (e) => {\r\n    e.target.style.background = \"#ffc107\";\r\n    console.log(e.target.id);\r\n    const id = e.target.id;\r\n    const userid = props.user._id;\r\n    console.log(userid);\r\n    const apiUrl = \"http://localhost:3001/Action/CommenceTache\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const user = { _idTache: id, _idUtilisateur: userid };\r\n    var raw = JSON.stringify(user);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data));\r\n  };\r\n  if (!props.tasks || props.tasks === 0) return <p>pas de taches3</p>;\r\n  if (state.diving) {\r\n    return (\r\n      <>\r\n        {props.tasks.map((item, index) => {\r\n          if (props.user.email === item.collaborateur) {\r\n            if (\r\n              props.user.listeTacheCommencés.find(\r\n                (elem) => elem._id === item._id\r\n              )\r\n            ) {\r\n              return (\r\n                <Col lg={4} sm={12} key={index}>\r\n                  <Card style={{ marginTop: \"10px\" }} onClick={() => {}}>\r\n                    <Card.Body>\r\n                      <Card.Title>{item.titre}</Card.Title>\r\n                      <Card.Subtitle className=\"mb-2 text-muted\">\r\n                        <Row>\r\n                          <Col>Responsable: {item.responsable}</Col>\r\n                          <Col>Réalisateur: {item.collaborateur}</Col>\r\n                        </Row>\r\n                      </Card.Subtitle>\r\n                      <Card.Subtitle className=\"mb-12 text-muted\">\r\n                        <br />\r\n                        {item.description}\r\n                      </Card.Subtitle>\r\n                      <Card.Text>\r\n                        <Row>\r\n                          <Col>Dates initiales:</Col>\r\n                          <Col>\r\n                            {new Date(item.dateDebutInit).toLocaleDateString()}\r\n                          </Col>\r\n                          <Col>\r\n                            {new Date(item.dateFinInit).toLocaleDateString()}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>Dates effectives:</Col>\r\n                          <Col>\r\n                            {new Date(\r\n                              item.dateDebutEffect\r\n                            ).toLocaleDateString()}\r\n                          </Col>\r\n                          <Col>\r\n                            {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>Charge restante</Col>\r\n                          <Col>{item.dataAvancement.chargeRestante}</Col>\r\n                          <Col>Date de fin prévue:</Col>\r\n                          <Col>\r\n                            {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <ProgressBar\r\n                          now={item.dataAvancement.pourcent * 100}\r\n                          label={`${(\r\n                            item.dataAvancement.pourcent * 100\r\n                          ).toFixed(2)}%`}\r\n                        />\r\n                      </Card.Text>\r\n                      <Button variant={\"warning\"}></Button>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Col lg={4} sm={12} key={index}>\r\n                  <Card style={{ marginTop: \"10px\" }} onClick={() => {}}>\r\n                    <Card.Body>\r\n                      <Card.Title>{item.titre}</Card.Title>\r\n                      <Card.Subtitle className=\"mb-2 text-muted\">\r\n                        <Row>\r\n                          <Col>Responsable: {item.responsable}</Col>\r\n                          <Col>Réalisateur: {item.collaborateur}</Col>\r\n                        </Row>\r\n                      </Card.Subtitle>\r\n                      <Card.Subtitle className=\"mb-12 text-muted\">\r\n                        <br />\r\n                        {item.description}\r\n                      </Card.Subtitle>\r\n                      <Card.Text>\r\n                        <Row>\r\n                          <Col>Dates initiales:</Col>\r\n                          <Col>\r\n                            {new Date(item.dateDebutInit).toLocaleDateString()}\r\n                          </Col>\r\n                          <Col>\r\n                            {new Date(item.dateFinInit).toLocaleDateString()}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>Dates effectives:</Col>\r\n                          <Col>\r\n                            {new Date(\r\n                              item.dateDebutEffect\r\n                            ).toLocaleDateString()}\r\n                          </Col>\r\n                          <Col>\r\n                            {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>Charge restante</Col>\r\n                          <Col>{item.dataAvancement.chargeRestante}</Col>\r\n                          <Col>Date de fin prévue:</Col>\r\n                          <Col>\r\n                            {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <ProgressBar\r\n                          now={item.dataAvancement.pourcent * 100}\r\n                          label={`${(\r\n                            item.dataAvancement.pourcent * 100\r\n                          ).toFixed(2)}%`}\r\n                        />\r\n                      </Card.Text>\r\n                      <Button id={item._id} onClick={addToStart}></Button>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            }\r\n          } else {\r\n            return (\r\n              <Col lg={4} sm={12} key={index}>\r\n                <Card style={{ marginTop: \"10px\" }} onClick={() => {}}>\r\n                  <Card.Body>\r\n                    <Card.Title>{item.titre}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                      <Row>\r\n                        <Col>Responsable: {item.responsable}</Col>\r\n                        <Col>Réalisateur: {item.collaborateur}</Col>\r\n                      </Row>\r\n                    </Card.Subtitle>\r\n                    <Card.Subtitle className=\"mb-12 text-muted\">\r\n                      <br />\r\n                      {item.description}\r\n                    </Card.Subtitle>\r\n                    <Card.Text>\r\n                      <Row>\r\n                        <Col>Dates initiales:</Col>\r\n                        <Col>\r\n                          {new Date(item.dateDebutInit).toLocaleDateString()}\r\n                        </Col>\r\n                        <Col>\r\n                          {new Date(item.dateFinInit).toLocaleDateString()}\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>Dates effectives:</Col>\r\n                        <Col>\r\n                          {new Date(item.dateDebutEffect).toLocaleDateString()}\r\n                        </Col>\r\n                        <Col>\r\n                          {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>Charge restante</Col>\r\n                        <Col>{item.dataAvancement.chargeRestante}</Col>\r\n                        <Col>Date de fin prévue:</Col>\r\n                        <Col>\r\n                          {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      <ProgressBar\r\n                        now={item.dataAvancement.pourcent * 100}\r\n                        label={`${(item.dataAvancement.pourcent * 100).toFixed(\r\n                          2\r\n                        )}%`}\r\n                      />\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return <GrosTaskList></GrosTaskList>;\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectsList.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\UserDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\GrosTaskList.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Project.js",["151","152"],"import { React, useState, useEffect } from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { FcTimeline } from \"react-icons/fc\";\r\nimport Loading2 from \"./Loading2\";\r\nimport GrosTaskList from \"./GrosTaskList\";\r\nimport * as AIIcons from \"react-icons/ai\";\r\nimport TaskForm from \"./TaskForm\";\r\nfunction Project(props) {\r\n  console.log(\"cette page\");\r\n  console.log(props);\r\n  const [state, setState] = useState({\r\n    mode: false,\r\n    loading: false,\r\n    tasks: [],\r\n    tasksObj: [\r\n      [\r\n        { type: \"string\", label: \"Task ID\" },\r\n        { type: \"string\", label: \"Task Name\" },\r\n        { type: \"date\", label: \"Start Date\" },\r\n        { type: \"date\", label: \"End Date\" },\r\n        { type: \"number\", label: \"Duration\" },\r\n        { type: \"number\", label: \"Percent Complete\" },\r\n        { type: \"string\", label: \"Dependencies\" },\r\n      ],\r\n    ],\r\n  });\r\n  useEffect(() => {\r\n    setState({\r\n      loading: true,\r\n      mode: state.mode,\r\n      tasks: state.tasks,\r\n      isPro2: true,\r\n      add: false,\r\n    });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Tache\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    setState({ loaging: false });\r\n    for (const elem of props.project.listeSousTaches) {\r\n      setState({ loading: true });\r\n      const id = { id: elem };\r\n      const raw = JSON.stringify(id);\r\n      var reqOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        mode: \"cors\",\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(apiUrl, reqOptions)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const yes = Object.assign({}, ...data);\r\n          //console.log(yes);\r\n          var test = state.tasks;\r\n          test.push(yes);\r\n\r\n          setState({\r\n            tasks: test,\r\n            mode: state.mode,\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  }, [setState]);\r\n  useEffect(() => {\r\n    setState({\r\n      mode: state.mode,\r\n      loading: true,\r\n      tasks: state.tasks,\r\n      isPro2: state.isPro2,\r\n      add: state.add,\r\n    });\r\n    const apiUrl = \"http://localhost:3001/Recherche/AllProjet\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const id = { id: props.project._id };\r\n    const raw = JSON.stringify(id);\r\n\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        var dt = state.tasksObj;\r\n\r\n        data.map((item, index) => {\r\n          console.log(item);\r\n          if (index !== 0) {\r\n            const test = [\r\n              item._id.toString(),\r\n              item.titre,\r\n              new Date(item.dateDebutInit),\r\n              new Date(item.dateFinInit),\r\n              null,\r\n              parseInt(item.dataAvancement.pourcent) * 100,\r\n              item.prédécesseurs.toString(),\r\n            ];\r\n\r\n            dt.push(test);\r\n          }\r\n\r\n          setState({\r\n            tasksObj: dt,\r\n            mode: state.mode,\r\n            loading: state.loading,\r\n            tasks: state.tasks,\r\n            isPro2: state.isPro2,\r\n          });\r\n\r\n          return null;\r\n        });\r\n      });\r\n  }, [setState]);\r\n  //console.log(state.tasks);\r\n  const changeMode = () =>\r\n    setState({\r\n      mode: !state.mode,\r\n      loading: state.loading,\r\n      tasks: state.tasks,\r\n      tasksObj: state.tasksObj,\r\n    });\r\n  if (!state.tasks || state.tasks.length === 0) {\r\n    if (state.loading) {\r\n      return <Loading2></Loading2>;\r\n    }\r\n    if (props.user.email === props.project.responsable) {\r\n      if (state.add) {\r\n        return (\r\n          <TaskForm\r\n            project={state.tasksObj}\r\n            user={props.user}\r\n            projectInfo={props.project}\r\n          ></TaskForm>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <p\r\n            style={{\r\n              display: \"flex\",\r\n              alignContent: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            ce projet est vide\r\n          </p>\r\n          <div\r\n            className=\"test_hover\"\r\n            style={{ position: \"fixed\", bottom: 10, right: 20, zIndex: 1 }}\r\n            onClick={() => {\r\n              if (!state.isPro2) {\r\n                setState({\r\n                  add: true,\r\n                  tasks: state.tasks,\r\n                  tasksObj: state.tasksObj,\r\n                });\r\n                console.log(\"on est en tache\");\r\n              }\r\n            }}\r\n          >\r\n            <AIIcons.AiFillPlusCircle\r\n              style={{ color: \"red\" }}\r\n              size={40}\r\n            ></AIIcons.AiFillPlusCircle>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <p>Ce Projet est vide</p>;\r\n    }\r\n  } else {\r\n    if (state.loading) {\r\n      return <Loading2></Loading2>;\r\n    }\r\n    if (state.mode) {\r\n      if (state.add) {\r\n        return (\r\n          <TaskForm\r\n            project={state.tasksObj}\r\n            user={props.user}\r\n            projectInfo={props.project}\r\n          ></TaskForm>\r\n        );\r\n      }\r\n      if (props.user.email !== props.project.responsable) {\r\n        return (\r\n          <div className=\"home\">\r\n            <Container>\r\n              <Row>\r\n                <Col lg={4}>\r\n                  <div className=\"test\">\r\n                    <button onClick={changeMode}>\r\n                      <FcTimeline />\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={4} />\r\n                <Col lg={4} />\r\n              </Row>\r\n              <Row>\r\n                <GrosTaskList\r\n                  project={props.project}\r\n                  tasks={state.tasks}\r\n                  user={props.user}\r\n                />\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"home\">\r\n            <Container>\r\n              <Row>\r\n                <Col lg={4}>\r\n                  <div className=\"test\">\r\n                    <button onClick={changeMode}>\r\n                      <FcTimeline />\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={4} />\r\n                <Col lg={4} />\r\n              </Row>\r\n              <Row>\r\n                <GrosTaskList\r\n                  project={props.project}\r\n                  tasks={state.tasks}\r\n                  user={props.user}\r\n                />\r\n              </Row>\r\n              <div\r\n                className=\"test_hover\"\r\n                style={{ position: \"fixed\", bottom: 10, right: 20, zIndex: 1 }}\r\n                onClick={() => {\r\n                  if (!state.isPro2) {\r\n                    setState({\r\n                      add: true,\r\n                      tasks: state.tasks,\r\n                      tasksObj: state.tasksObj,\r\n                    });\r\n                    console.log(\"on est en tache\");\r\n                  }\r\n                }}\r\n              >\r\n                <AIIcons.AiFillPlusCircle\r\n                  style={{ color: \"red\" }}\r\n                  size={40}\r\n                ></AIIcons.AiFillPlusCircle>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      if (state.add) {\r\n        return (\r\n          <TaskForm\r\n            project={state.tasksObj}\r\n            user={props.user}\r\n            projectInfo={props.project}\r\n          ></TaskForm>\r\n        );\r\n      }\r\n\r\n      if (props.user.email === props.project.responsable) {\r\n        console.log(state.tasksObj?.length);\r\n        return (\r\n          <div className=\"home\">\r\n            <Container>\r\n              <Row>\r\n                <Col lg={4}>\r\n                  <div className=\"test\">\r\n                    <button onClick={changeMode}>\r\n                      <FcTimeline />\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={4} />\r\n                <Col lg={4} />\r\n              </Row>\r\n              <Row>\r\n                <Col lg={12}>\r\n                  <Chart\r\n                    width={\"100%\"}\r\n                    height={state.tasksObj?.length * 30}\r\n                    chartType=\"Gantt\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={state.tasksObj}\r\n                    options={{\r\n                      gantt: {\r\n                        criticalPathEnabled: true,\r\n                        criticalPathStyle: {\r\n                          stroke: \"#e64a19\",\r\n                          strokeWidth: 3,\r\n                        },\r\n                        trackHeight: 30,\r\n                      },\r\n                    }}\r\n                    rootProps={{ \"data-testid\": \"5\" }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <div\r\n                className=\"test_hover\"\r\n                style={{ position: \"fixed\", bottom: 10, right: 20, zIndex: 1 }}\r\n                onClick={() => {\r\n                  if (!state.isPro2) {\r\n                    setState({\r\n                      add: true,\r\n                      tasks: state.tasks,\r\n                      tasksObj: state.tasksObj,\r\n                    });\r\n                    console.log(\"on est en tache\");\r\n                  }\r\n                }}\r\n              >\r\n                <AIIcons.AiFillPlusCircle\r\n                  style={{ color: \"red\" }}\r\n                  size={40}\r\n                ></AIIcons.AiFillPlusCircle>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"home\">\r\n            <Container>\r\n              <Row>\r\n                <Col lg={4}>\r\n                  <div className=\"test\">\r\n                    <button onClick={changeMode}>\r\n                      <FcTimeline />\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={4} />\r\n                <Col lg={4} />\r\n              </Row>\r\n              <Row>\r\n                <Col lg={12}>\r\n                  <Chart\r\n                    width={\"100%\"}\r\n                    height={state.tasksObj?.length * 4}\r\n                    chartType=\"Gantt\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={state.tasksObj}\r\n                    options={{\r\n                      gantt: {\r\n                        criticalPathEnabled: true,\r\n                        criticalPathStyle: {\r\n                          stroke: \"#e64a19\",\r\n                          strokeWidth: 3,\r\n                        },\r\n                        trackHeight: 30,\r\n                      },\r\n                    }}\r\n                    rootProps={{ \"data-testid\": \"5\" }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading2.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskForm.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\CR.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\CrCard.js",["153"],"import { React, useEffect, useState } from \"react\";\r\n\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nfunction CrCard(props) {\r\n  const [state, setstate] = useState({});\r\n  useEffect(() => {\r\n    const apiUrl = \"http://localhost:3001/Recherche/Tache\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({ id: props.task });\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setstate(data[0]);\r\n      });\r\n  }, [setstate]);\r\n  return (\r\n    <Col lg={6} sm={12}>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>{state.titre}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n          <Card.Text>\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </Card.Text>\r\n          <Card.Link href=\"#\">Card Link</Card.Link>\r\n          <Card.Link href=\"#\">Another Link</Card.Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default CrCard;\r\n",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":16},{"ruleId":"158","severity":1,"message":"162","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":12},{"ruleId":"158","severity":1,"message":"163","line":13,"column":8,"nodeType":"160","messageId":"161","endLine":13,"endColumn":17},{"ruleId":"158","severity":1,"message":"164","line":14,"column":8,"nodeType":"160","messageId":"161","endLine":14,"endColumn":14},{"ruleId":"158","severity":1,"message":"165","line":17,"column":3,"nodeType":"160","messageId":"161","endLine":17,"endColumn":9},{"ruleId":"158","severity":1,"message":"166","line":18,"column":3,"nodeType":"160","messageId":"161","endLine":18,"endColumn":14},{"ruleId":"158","severity":1,"message":"167","line":19,"column":3,"nodeType":"160","messageId":"161","endLine":19,"endColumn":11},{"ruleId":"158","severity":1,"message":"168","line":20,"column":3,"nodeType":"160","messageId":"161","endLine":20,"endColumn":12},{"ruleId":"158","severity":1,"message":"169","line":21,"column":3,"nodeType":"160","messageId":"161","endLine":21,"endColumn":19},{"ruleId":"158","severity":1,"message":"170","line":22,"column":3,"nodeType":"160","messageId":"161","endLine":22,"endColumn":7},{"ruleId":"158","severity":1,"message":"171","line":23,"column":3,"nodeType":"160","messageId":"161","endLine":23,"endColumn":7},{"ruleId":"158","severity":1,"message":"172","line":24,"column":3,"nodeType":"160","messageId":"161","endLine":24,"endColumn":6},{"ruleId":"158","severity":1,"message":"173","line":25,"column":3,"nodeType":"160","messageId":"161","endLine":25,"endColumn":13},{"ruleId":"158","severity":1,"message":"174","line":27,"column":3,"nodeType":"160","messageId":"161","endLine":27,"endColumn":12},{"ruleId":"158","severity":1,"message":"175","line":49,"column":9,"nodeType":"160","messageId":"161","endLine":49,"endColumn":16},{"ruleId":"158","severity":1,"message":"176","line":62,"column":9,"nodeType":"160","messageId":"161","endLine":62,"endColumn":25},{"ruleId":"158","severity":1,"message":"177","line":66,"column":9,"nodeType":"160","messageId":"161","endLine":66,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":113,"column":5,"nodeType":"180","endLine":113,"endColumn":12,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":17,"column":5,"nodeType":"180","endLine":17,"endColumn":18,"suggestions":"183"},{"ruleId":"158","severity":1,"message":"171","line":9,"column":3,"nodeType":"160","messageId":"161","endLine":9,"endColumn":7},{"ruleId":"158","severity":1,"message":"184","line":10,"column":8,"nodeType":"160","messageId":"161","endLine":10,"endColumn":19},{"ruleId":"158","severity":1,"message":"165","line":12,"column":8,"nodeType":"160","messageId":"161","endLine":12,"endColumn":14},{"ruleId":"158","severity":1,"message":"173","line":13,"column":8,"nodeType":"160","messageId":"161","endLine":13,"endColumn":18},{"ruleId":"158","severity":1,"message":"185","line":7,"column":7,"nodeType":"160","messageId":"161","endLine":7,"endColumn":13},{"ruleId":"158","severity":1,"message":"186","line":102,"column":9,"nodeType":"160","messageId":"161","endLine":102,"endColumn":32},{"ruleId":"158","severity":1,"message":"187","line":127,"column":9,"nodeType":"160","messageId":"161","endLine":127,"endColumn":27},{"ruleId":"158","severity":1,"message":"188","line":10,"column":17,"nodeType":"160","messageId":"161","endLine":10,"endColumn":25},{"ruleId":"158","severity":1,"message":"189","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":21},{"ruleId":"158","severity":1,"message":"190","line":11,"column":23,"nodeType":"160","messageId":"161","endLine":11,"endColumn":36},{"ruleId":"178","severity":1,"message":"191","line":69,"column":6,"nodeType":"180","endLine":69,"endColumn":16,"suggestions":"192"},{"ruleId":"178","severity":1,"message":"193","line":122,"column":6,"nodeType":"180","endLine":122,"endColumn":16,"suggestions":"194"},{"ruleId":"178","severity":1,"message":"195","line":25,"column":6,"nodeType":"180","endLine":25,"endColumn":16,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'Settings' is defined but never used.","Identifier","unusedVar","'td' is defined but never used.","'LoginForm' is defined but never used.","'SignUp' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'Checkbox' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'classes' is assigned a value but never used.","'handleMailChange' is assigned a value but never used.","'handleMDPChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'appState.islogged'. Either include it or remove the dependency array.","ArrayExpression",["199"],"React Hook useCallback has a missing dependency: 'sideBar'. Either include it or remove the dependency array.",["200"],"'CardActions' is defined but never used.","'getNow' is assigned a value but never used.","'handleChangeResponsable' is assigned a value but never used.","'handleChangeCollab' is assigned a value but never used.","'setstate' is assigned a value but never used.","'listetaches' is assigned a value but never used.","'setListeTache' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.project.listeSousTaches', 'state.mode', and 'state.tasks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setState' needs the current value of 'state.mode'.",["201"],"React Hook useEffect has missing dependencies: 'props.project._id', 'state.add', 'state.isPro2', 'state.loading', 'state.mode', 'state.tasks', and 'state.tasksObj'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setState' needs the current value of 'state.mode'.",["202"],"React Hook useEffect has a missing dependency: 'props.task'. Either include it or remove the dependency array.",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [appState.islogged, login]",{"range":"214","text":"215"},"Update the dependencies array to be: [showSideBar, sideBar]",{"range":"216","text":"217"},"Update the dependencies array to be: [props.project.listeSousTaches, setState, state.mode, state.tasks]",{"range":"218","text":"219"},"Update the dependencies array to be: [props.project._id, setState, state.add, state.isPro2, state.loading, state.mode, state.tasks, state.tasksObj]",{"range":"220","text":"221"},"Update the dependencies array to be: [props.task, setstate]",{"range":"222","text":"223"},[3154,3161],"[appState.islogged, login]",[609,622],"[showSideBar, sideBar]",[2078,2088],"[props.project.listeSousTaches, setState, state.mode, state.tasks]",[3479,3489],"[props.project._id, setState, state.add, state.isPro2, state.loading, state.mode, state.tasks, state.tasksObj]",[725,735],"[props.task, setstate]"]