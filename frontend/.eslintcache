[{"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Sidebar.js":"3","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading.js":"4","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TasksData.js":"5","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SignUp.js":"6","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Home.js":"7","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Settings.js":"8","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Notifs.js":"9","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Explore.js":"10","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectForm.js":"11","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\loginForm.js":"12","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Projects.js":"13","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SideBarData.js":"14","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskList.js":"15","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ClientDisplaySelection.js":"16","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectDisplaySelection.js":"17","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskDisplaySelection.js":"18","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\IdDisplaySelection.js":"19","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectsList.js":"20","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\GrosTaskList.js":"21","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Project.js":"22","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading2.js":"23","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskForm.js":"24","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\UserDisplaySelection.js":"25"},{"size":255,"mtime":1613057531202,"results":"26","hashOfConfig":"27"},{"size":7319,"mtime":1614156323282,"results":"28","hashOfConfig":"27"},{"size":1969,"mtime":1613057429041,"results":"29","hashOfConfig":"27"},{"size":637,"mtime":1613596919853,"results":"30","hashOfConfig":"27"},{"size":340,"mtime":1613057429064,"results":"31","hashOfConfig":"27"},{"size":4193,"mtime":1613131945176,"results":"32","hashOfConfig":"27"},{"size":785,"mtime":1613998275302,"results":"33","hashOfConfig":"27"},{"size":107,"mtime":1613057429097,"results":"34","hashOfConfig":"27"},{"size":1567,"mtime":1613596919863,"results":"35","hashOfConfig":"27"},{"size":4278,"mtime":1614341620761,"results":"36","hashOfConfig":"27"},{"size":7697,"mtime":1614156323327,"results":"37","hashOfConfig":"27"},{"size":2422,"mtime":1614156323331,"results":"38","hashOfConfig":"27"},{"size":2326,"mtime":1614156323332,"results":"39","hashOfConfig":"27"},{"size":759,"mtime":1613596919856,"results":"40","hashOfConfig":"27"},{"size":2841,"mtime":1613998275300,"results":"41","hashOfConfig":"27"},{"size":2814,"mtime":1614341271139,"results":"42","hashOfConfig":"27"},{"size":2848,"mtime":1614340860831,"results":"43","hashOfConfig":"27"},{"size":4353,"mtime":1614342216634,"results":"44","hashOfConfig":"27"},{"size":1178,"mtime":1614263983856,"results":"45","hashOfConfig":"27"},{"size":2755,"mtime":1614156323329,"results":"46","hashOfConfig":"27"},{"size":9890,"mtime":1613998275297,"results":"47","hashOfConfig":"27"},{"size":10799,"mtime":1614156323283,"results":"48","hashOfConfig":"27"},{"size":472,"mtime":1613998275297,"results":"49","hashOfConfig":"27"},{"size":7690,"mtime":1614156323330,"results":"50","hashOfConfig":"27"},{"size":3552,"mtime":1614341914490,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"44v74n",{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\index.js",[],["109","110"],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\App.js",["111","112","113","114"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Projects from \"./pages/Projects\";\r\nimport Explore from \"./pages/Explore\";\r\nimport Notifs from \"./pages/Notifs\";\r\nimport Settings from \"./pages/Settings\";\r\nimport { td } from \"./components/TasksData\";\r\nimport loading from \"./components/Loading\";\r\n\r\nimport LoginForm from \"./components/loginForm\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport ProjectForm from \"./components/ProjectForm\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Checkbox,\r\n  TextField,\r\n  FormControlLabel,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const HomeLoading = loading(Home);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    userData: null,\r\n    notifsData: null,\r\n    projectsData: null,\r\n    tasksData: null,\r\n    islogged: false,\r\n    email: \"\",\r\n    mdp: \"\",\r\n  });\r\n  const handleMailChange = (e) => {\r\n    //console.log(e);\r\n    setAppState({ mdp: appState.mdp, email: e.target.value });\r\n    console.log(appState.email);\r\n  };\r\n  const handleMDPChange = (e) => {\r\n    setAppState({ mdp: e.target.value, email: appState.email });\r\n    console.log(appState.mdp);\r\n  };\r\n\r\n  const login = () => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = \"http://localhost:3001/login\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const user = { email: appState.email, mdp: appState.mdp };\r\n    var raw = JSON.stringify(user);\r\n    console.log(user);\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data) {\r\n          console.log(\"bonnerep\");\r\n          setAppState({\r\n            loading: false,\r\n            userData: data.dataUtilisateur,\r\n            notifsData: data.dataNotifications,\r\n            projectsData: data.dataProjects,\r\n            tasksData: data.dataTaches,\r\n            isLoading: true,\r\n            islogged: true,\r\n          });\r\n        } else {\r\n          window.alert(\"Mauvais identifiants\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  /* useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = \"http://localhost:3001/login\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify(user);\r\n\r\n    var reqOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(apiUrl, reqOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setAppState({\r\n          loading: false,\r\n          userData: data.dataUtilisateur,\r\n          notifsData: data.dataNotifications,\r\n          projectsData: data.dataProjects,\r\n          tasksData: data.dataTaches,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }, [setAppState]); */\r\n  if (!appState.islogged) {\r\n    return (\r\n      <React.Fragment>\r\n        <main className=\"App\">\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  onChange={handleMailChange}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={handleMDPChange}\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    login();\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            <Box mt={8}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {\"Copyright © \"}\r\n                <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                  Project Manager\r\n                </Link>{\" \"}\r\n                {new Date().getFullYear()}\r\n                {\".\"}\r\n              </Typography>\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <main className=\"App\">\r\n          <Router>\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => (\r\n                  <HomeLoading\r\n                    isLoading={appState.loading}\r\n                    Userdata={appState.userData}\r\n                    tasks={appState.tasksData}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/projects\"\r\n                render={() => (\r\n                  <Projects\r\n                    Userdata={appState.userData}\r\n                    projects={appState.projectsData}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/notifications\"\r\n                render={() => <Notifs notifs={appState.notifsData} />}\r\n              />\r\n              <Route path=\"/explore\" component={Explore} />\r\n              <Route path=\"/settings\" component={ProjectForm} />\r\n              <Route exact path=\"/login\" component={LoginForm} />\r\n              <Route exact path=\"/signup\" component={SignUp} />\r\n              <Route exact path=\"/signup\" component={SignUp} />\r\n            </Switch>\r\n          </Router>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Sidebar.js",["115"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport * as FAIcons from \"react-icons/fa\";\r\nimport * as AIIcons from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SideBarData } from \"./SideBarData\";\r\nimport \"./Sidebar.css\";\r\nimport { IconContext } from \"react-icons\";\r\nfunction Sidebar() {\r\n  const [sideBar, setSideBar] = useState(false);\r\n  const showSideBar = () => setSideBar(!sideBar);\r\n  const escFunction = useCallback(\r\n    (event) => {\r\n      if ((event.key === \"Escape\" || event.type === \"click\") && sideBar) {\r\n        showSideBar();\r\n      }\r\n    },\r\n    [showSideBar]\r\n  );\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n    document.addEventListener(\"click\", escFunction, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", escFunction, false);\r\n      document.removeEventListener(\"click\", escFunction, false);\r\n    };\r\n  }, [escFunction]);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#5060b8\" }}>\r\n        <div className=\"navbar\">\r\n          <Link to=\"#\" className=\"menu-bars\">\r\n            <FAIcons.FaBars onClick={showSideBar} />\r\n          </Link>\r\n        </div>\r\n        <nav className={sideBar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\" onClick={showSideBar}>\r\n            <li className=\"navbar-toggle\">\r\n              <Link to=\"#\" className=\"menu-bars\">\r\n                <AIIcons.AiOutlineClose />\r\n              </Link>\r\n            </li>\r\n            {SideBarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link to={item.path}>\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TasksData.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Settings.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Notifs.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Explore.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectForm.js",["116"],"import { React, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst getNow = () => {\r\n  const now = new Date();\r\n  console.log(now.toLocaleDateString());\r\n  return now.toLocaleDateString();\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      //margin: \"2rem auto\",\r\n      margin: \"0.5rem auto\",\r\n      width: \"75%\",\r\n    },\r\n  },\r\n  description: {\r\n    width: \"50%\",\r\n  },\r\n  groupedFields: {\r\n    justifyContent: \"space-around\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst ProjectForm = () => {\r\n  const handleEndChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: e.target.value,\r\n    });\r\n  };\r\n  const handleBeginChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: e.target.value,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleClientChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: e.target.value,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleRespChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: state.description,\r\n      responsable: e.target.value,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleDescChange = (e) => {\r\n    setstate({\r\n      titre: state.titre,\r\n      description: e.target.value,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n  const handleTittleChange = (e) => {\r\n    setstate({\r\n      titre: e.target.value,\r\n      description: state.description,\r\n      responsable: state.responsable,\r\n      client: state.client,\r\n      dateDebutInit: state.dateDebutInit,\r\n      dateFinInit: state.dateFinInit,\r\n    });\r\n  };\r\n\r\n  const [state, setstate] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    responsable: \"\",\r\n    client: \"\",\r\n    dateDebutInit: \"\",\r\n    dateFinInit: \"\",\r\n    now: new Date(),\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <h1>Créer un projet</h1>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"18%\",\r\n              width: 500,\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"titre\"\r\n            label=\"Titre\"\r\n            name=\"titre\"\r\n            autoComplete=\"titre\"\r\n            autoFocus\r\n            onChange={handleTittleChange}\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Description\"\r\n            required\r\n            autoFocus\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"32%\",\r\n              width: 500,\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            multiline\r\n            rows={3}\r\n            variant=\"outlined\"\r\n            onChange={handleDescChange}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"45.5%\",\r\n              width: 500,\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            //margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"resp\"\r\n            label=\"Responsable\"\r\n            name=\"resp\"\r\n            autoComplete=\"collaborateurs\"\r\n            autoFocus\r\n            onChange={handleRespChange}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"55.5%\",\r\n              width: 500,\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            //margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"client\"\r\n            label=\"Client\"\r\n            name=\"client\"\r\n            autoComplete=\"client\"\r\n            autoFocus\r\n            onChange={handleClientChange}\r\n          />\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"66.5%\",\r\n              width: 500,\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            //margin=\"normal\"\r\n            required\r\n            id=\"date\"\r\n            label=\"Date de début\"\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleBeginChange}\r\n          />\r\n          <TextField\r\n            className={classes.description}\r\n            variant=\"outlined\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"77.5%\",\r\n              width: 500,\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            //margin=\"normal\"\r\n            required\r\n            id=\"date\"\r\n            label=\"Date de fin\"\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleEndChange}\r\n          />\r\n\r\n          <Button\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"95%\",\r\n              top: \"95%\",\r\n\r\n              display: \"flex\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              zIndex: 3,\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => {\r\n              const apiUrl = \"http://localhost:3001/Ajout/Projet\";\r\n              var myHeaders = new Headers();\r\n              myHeaders.append(\"Content-Type\", \"application/json\");\r\n              const req = state;\r\n              var raw = JSON.stringify(req);\r\n              var reqOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n              };\r\n              fetch(apiUrl, reqOptions)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                  console.log(data);\r\n                  if (data.success) {\r\n                    history.goBack();\r\n                  } else {\r\n                    alert(data.erreur);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            Créer\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\loginForm.js",["117"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Checkbox,\r\n  TextField,\r\n  FormControlLabel,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\n//import {LockOutlinedIcon} from '@material-ui/icons/LockOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n          {\"Copyright © \"}\r\n          <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n            Project Manager\r\n          </Link>{\" \"}\r\n          {new Date().getFullYear()}\r\n          {\".\"}\r\n        </Typography>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\pages\\Projects.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\SideBarData.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskList.js",["118"],"import { React, useState } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport GrosTaskList from \"./GrosTaskList\";\r\nfunction TaskList(props) {\r\n  const [state, setstate] = useState({ diving: true });\r\n  if (!props.tasks || props.tasks === 0) return <p>pas de taches3</p>;\r\n  if (state.diving) {\r\n    return (\r\n      <>\r\n        {props.tasks.map((item, index) => {\r\n          return (\r\n            <Col lg={4} sm={12} key={index}>\r\n              <Card style={{ marginTop: \"10px\" }} onClick={() => {}}>\r\n                <Card.Body>\r\n                  <Card.Title>{item.titre}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    <Row>\r\n                      <Col>Responsable: {item.responsable}</Col>\r\n                      <Col>Réalisateur: {item.collaborateur}</Col>\r\n                    </Row>\r\n                  </Card.Subtitle>\r\n                  <Card.Subtitle className=\"mb-12 text-muted\">\r\n                    <br />\r\n                    {item.description}\r\n                  </Card.Subtitle>\r\n                  <Card.Text>\r\n                    <Row>\r\n                      <Col>Dates initiales:</Col>\r\n                      <Col>\r\n                        {new Date(item.dateDebutInit).toLocaleDateString()}\r\n                      </Col>\r\n                      <Col>\r\n                        {new Date(item.dateFinInit).toLocaleDateString()}\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>Dates effectives:</Col>\r\n                      <Col>\r\n                        {new Date(item.dateDebutEffect).toLocaleDateString()}\r\n                      </Col>\r\n                      <Col>\r\n                        {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>Charge restante</Col>\r\n                      <Col>{item.dataAvancement.chargeRestante}</Col>\r\n                      <Col>\r\n                        {new Date(item.dateFinEffect).toLocaleDateString()}\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <ProgressBar\r\n                      now={item.dataAvancement.pourcent}\r\n                      label={`${item.dataAvancement.pourcent}%`}\r\n                    />\r\n                  </Card.Text>\r\n                  <Card.Link href=\"#\">Card Link</Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  } else {\r\n    return <GrosTaskList></GrosTaskList>;\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ClientDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\IdDisplaySelection.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\ProjectsList.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\GrosTaskList.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Project.js",["119"],"import { React, useState, useEffect } from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { FcTimeline } from \"react-icons/fc\";\r\nimport Loading2 from \"./Loading2\";\r\nimport GrosTaskList from \"./GrosTaskList\";\r\nimport * as AIIcons from \"react-icons/ai\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nfunction Project(props) {\r\n  console.log(\"cette page\");\r\n  console.log(props);\r\n  const [state, setState] = useState({\r\n    mode: false,\r\n    loading: false,\r\n    tasks: [],\r\n  });\r\n  useEffect(() => {\r\n    setState({\r\n      loading: true,\r\n      mode: state.mode,\r\n      tasks: state.tasks,\r\n      isPro2: true,\r\n      add: false,\r\n    });\r\n    const apiUrl = \"http://localhost:3001/Recherche/Tache\";\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    setState({ loaging: false });\r\n    for (const elem of props.project.listeSousTaches) {\r\n      setState({ loading: true });\r\n      const id = { id: elem };\r\n      const raw = JSON.stringify(id);\r\n      var reqOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        mode: \"cors\",\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      fetch(apiUrl, reqOptions)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const yes = Object.assign({}, ...data);\r\n          //console.log(yes);\r\n          var test = state.tasks;\r\n          test.push(yes);\r\n\r\n          setState({\r\n            tasks: test,\r\n            mode: state.mode,\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  }, [setState]);\r\n  //console.log(state.tasks);\r\n  const changeMode = () =>\r\n    setState({ mode: !state.mode, loading: state.loading, tasks: state.tasks });\r\n  if (state.add) {\r\n    return <TaskForm project={props.project}></TaskForm>;\r\n  }\r\n  if (state.loading) {\r\n    return <Loading2></Loading2>;\r\n  } else if (!state.tasks || state.tasks === 0) {\r\n    if (props.user.email === props.project.responsable) {\r\n      return (\r\n        <>\r\n          <p>pas de taches dans le proj</p>\r\n          <div\r\n            className=\"test_hover\"\r\n            style={{ position: \"fixed\", bottom: 10, right: 20, zIndex: 1 }}\r\n            onClick={() => {\r\n              if (!state.isPro2) {\r\n                setState({ add: true, tasks: state.tasks });\r\n                console.log(\"on est en tache\");\r\n              }\r\n            }}\r\n          >\r\n            <AIIcons.AiFillPlusCircle\r\n              style={{ color: \"red\" }}\r\n              size={40}\r\n            ></AIIcons.AiFillPlusCircle>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <p>pas de taches dans le proj</p>;\r\n    }\r\n  } else if (state.add) {\r\n    return <ProjectForm></ProjectForm>;\r\n  } else if (state.mode) {\r\n    return (\r\n      <div className=\"home\">\r\n        {/* test pour voir comment marche des fonctions avec params */}\r\n        {/* <button\r\n          onClick={() => {\r\n            test(nom);\r\n          }}\r\n        ></button> */}\r\n        <Container>\r\n          <Row>\r\n            <Col lg={4}>\r\n              <div className=\"test\">\r\n                <button onClick={changeMode}>\r\n                  <FcTimeline />\r\n                </button>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} />\r\n            <Col lg={4} />\r\n          </Row>\r\n          <Row>\r\n            <GrosTaskList\r\n              project={props.project}\r\n              tasks={state.tasks}\r\n              user={props.user}\r\n            />\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else if (props.user.email === props.project.responsable) {\r\n    return (\r\n      <div className=\"home\">\r\n        <Container>\r\n          <Row>\r\n            <Col lg={4}>\r\n              <div className=\"test\">\r\n                <button onClick={changeMode}>\r\n                  <FcTimeline />\r\n                </button>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} />\r\n            <Col lg={4} />\r\n          </Row>\r\n          <Row>\r\n            <Col lg={12}>\r\n              <Chart\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n                chartType=\"Gantt\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                  [\r\n                    { type: \"string\", label: \"Task ID\" },\r\n                    { type: \"string\", label: \"Task Name\" },\r\n                    { type: \"date\", label: \"Start Date\" },\r\n                    { type: \"date\", label: \"End Date\" },\r\n                    { type: \"number\", label: \"Duration\" },\r\n                    { type: \"number\", label: \"Percent Complete\" },\r\n                    { type: \"string\", label: \"Dependencies\" },\r\n                  ],\r\n                  [\r\n                    \"Research\",\r\n                    \"Find sources\",\r\n                    new Date(2015, 0, 1),\r\n                    new Date(2015, 0, 5),\r\n                    null,\r\n                    100,\r\n                    null,\r\n                  ],\r\n                  [\r\n                    \"Research2\",\r\n                    \"Find sources\",\r\n                    new Date(2015, 0, 1),\r\n                    new Date(2015, 0, 6),\r\n                    null,\r\n                    100,\r\n                    null,\r\n                  ],\r\n\r\n                  [\r\n                    \"Write\",\r\n                    \"Write paper\",\r\n                    null,\r\n                    new Date(2015, 0, 9),\r\n                    3 * 24 * 60 * 60 * 1000,\r\n                    25,\r\n                    \"Research,Outline\",\r\n                  ],\r\n                  [\r\n                    \"Cite\",\r\n                    \"Create bibliography\",\r\n                    null,\r\n                    new Date(2015, 0, 7),\r\n                    1 * 24 * 60 * 60 * 1000,\r\n                    20,\r\n                    \"Research\",\r\n                  ],\r\n                  [\r\n                    \"Complete\",\r\n                    \"Hand in paper\",\r\n                    null,\r\n                    new Date(2015, 0, 10),\r\n                    1 * 24 * 60 * 60 * 1000,\r\n                    0,\r\n                    \"Cite,Write\",\r\n                  ],\r\n                  [\r\n                    \"Outline\",\r\n                    \"Outline paper\",\r\n                    null,\r\n                    new Date(2015, 0, 6),\r\n                    1 * 24 * 60 * 60 * 1000,\r\n                    100,\r\n                    \"Research\",\r\n                  ],\r\n                ]}\r\n                rootProps={{ \"data-testid\": \"1\" }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <div\r\n            className=\"test_hover\"\r\n            style={{ position: \"fixed\", bottom: 10, right: 20, zIndex: 1 }}\r\n            onClick={() => {\r\n              if (!state.isPro2) {\r\n                setState({ add: true, tasks: state.tasks });\r\n                console.log(\"on est en tache\");\r\n              }\r\n            }}\r\n          >\r\n            <AIIcons.AiFillPlusCircle\r\n              style={{ color: \"red\" }}\r\n              size={40}\r\n            ></AIIcons.AiFillPlusCircle>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"home\">\r\n        <Container>\r\n          <Row>\r\n            <Col lg={4}>\r\n              <div className=\"test\">\r\n                <button onClick={changeMode}>\r\n                  <FcTimeline />\r\n                </button>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} />\r\n            <Col lg={4} />\r\n          </Row>\r\n          <Row>\r\n            <Col lg={12}>\r\n              <Chart\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n                chartType=\"Gantt\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                  [\r\n                    { type: \"string\", label: \"Task ID\" },\r\n                    { type: \"string\", label: \"Task Name\" },\r\n                    { type: \"date\", label: \"Start Date\" },\r\n                    { type: \"date\", label: \"End Date\" },\r\n                    { type: \"number\", label: \"Duration\" },\r\n                    { type: \"number\", label: \"Percent Complete\" },\r\n                    { type: \"string\", label: \"Dependencies\" },\r\n                  ],\r\n                  [\r\n                    \"Research\",\r\n                    \"Find sources\",\r\n                    new Date(2015, 0, 1),\r\n                    new Date(2015, 0, 5),\r\n                    null,\r\n                    100,\r\n                    null,\r\n                  ],\r\n                  [\r\n                    \"Research2\",\r\n                    \"Find sources\",\r\n                    new Date(2015, 0, 1),\r\n                    new Date(2015, 0, 6),\r\n                    null,\r\n                    100,\r\n                    null,\r\n                  ],\r\n\r\n                  [\r\n                    \"Write\",\r\n                    \"Write paper\",\r\n                    null,\r\n                    new Date(2015, 0, 9),\r\n                    3 * 24 * 60 * 60 * 1000,\r\n                    25,\r\n                    \"Research,Outline\",\r\n                  ],\r\n                  [\r\n                    \"Cite\",\r\n                    \"Create bibliography\",\r\n                    null,\r\n                    new Date(2015, 0, 7),\r\n                    1 * 24 * 60 * 60 * 1000,\r\n                    20,\r\n                    \"Research\",\r\n                  ],\r\n                  [\r\n                    \"Complete\",\r\n                    \"Hand in paper\",\r\n                    null,\r\n                    new Date(2015, 0, 10),\r\n                    1 * 24 * 60 * 60 * 1000,\r\n                    0,\r\n                    \"Cite,Write\",\r\n                  ],\r\n                  [\r\n                    \"Outline\",\r\n                    \"Outline paper\",\r\n                    null,\r\n                    new Date(2015, 0, 6),\r\n                    1 * 24 * 60 * 60 * 1000,\r\n                    100,\r\n                    \"Research\",\r\n                  ],\r\n                ]}\r\n                rootProps={{ \"data-testid\": \"1\" }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <div\r\n            className=\"test_hover\"\r\n            style={{ position: \"fixed\", bottom: 10, right: 20, zIndex: 1 }}\r\n            onClick={() => {\r\n              if (!state.isPro2) {\r\n                setState({ add: true, tasks: state.tasks });\r\n                console.log(\"on est en tache\");\r\n              }\r\n            }}\r\n          >\r\n            <AIIcons.AiFillPlusCircle\r\n              style={{ color: \"#red\" }}\r\n              size={40}\r\n            ></AIIcons.AiFillPlusCircle>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\Loading2.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\TaskForm.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\GenieLogiciel\\frontend\\src\\components\\UserDisplaySelection.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":16},{"ruleId":"124","severity":1,"message":"129","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":12},{"ruleId":"124","severity":1,"message":"130","line":23,"column":3,"nodeType":"126","messageId":"127","endLine":23,"endColumn":7},{"ruleId":"131","severity":1,"message":"132","line":17,"column":5,"nodeType":"133","endLine":17,"endColumn":18,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"135","line":7,"column":7,"nodeType":"126","messageId":"127","endLine":7,"endColumn":13},{"ruleId":"124","severity":1,"message":"130","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":7},{"ruleId":"124","severity":1,"message":"136","line":8,"column":17,"nodeType":"126","messageId":"127","endLine":8,"endColumn":25},{"ruleId":"131","severity":1,"message":"137","line":59,"column":6,"nodeType":"133","endLine":59,"endColumn":16,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Settings' is defined but never used.","'td' is defined but never used.","'Grid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'sideBar'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'getNow' is assigned a value but never used.","'setstate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.project.listeSousTaches', 'state.mode', and 'state.tasks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setState' needs the current value of 'state.mode'.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [showSideBar, sideBar]",{"range":"147","text":"148"},"Update the dependencies array to be: [props.project.listeSousTaches, setState, state.mode, state.tasks]",{"range":"149","text":"150"},[609,622],"[showSideBar, sideBar]",[1730,1740],"[props.project.listeSousTaches, setState, state.mode, state.tasks]"]